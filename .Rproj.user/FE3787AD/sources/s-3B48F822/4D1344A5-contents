--- 
title: "Wahlergebnisse der Berliner Grünen"
author: "Jakob Schumacher, Julius Oblong"
date: "`r Sys.Date()`"
site: bookdown::bookdown_site
documentclass: book
bibliography: [book.bib, packages.bib]
biblio-style: apalike
link-citations: yes
description: "Diese Darstellung dient dem Aufdecken von Trends bei den Wahlergebnissen der Berliner Grünen mit einem Fokus auf Pankow."
---


# Einleitung

![Partei Logo](https://www.gruene-hessen.de/werkzeugkasten/wp-content/themes/hessengruen/images/vorschaubild.jpg){width=20%} 

## Ziel
Diese Darstellung dient dem Aufdecken von Trends bei den Wahlergebnissen der Pankower Grünen. Die angezeigten Graphen sind prinzipiell erweiterbar um andere Wahlergebnisse z.B. der Wahlen zu Abgeordnetenhaus. 

## Datenquelle
Alle Daten entstammen dem Landesamt für Statistik Berlin-Brandenburg. Die Daten wurden im März 2021 von der Seite [wahlen-berlin.de](https://www.wahlen-berlin.de/Historie/hist_Wahlen.asp) heruntergeladen

## Karten
Die Kartendateien (Shape-Files) sind von der Seite [Open-Data Berlin](https://daten.berlin.de/datensaetze/geometrien-der-wahlbezirke-f%C3%BCr-die-wahl-zum-abgeordnetenhaus-von-berlin-und-zu-den-0) 

## Methoden
Die Daten wurden verarbeitet mit R. Die Darstellung erfolgt durch ein [Flexdashboard](https://rmarkdown.rstudio.com/flexdashboard/index.html). Die Zahlen wurden nach bestem Wissen und Gewissen geprüft - Fehler sind aber selbstverständlich möglich. Die genaue Berechnung ist aus dem Source-Code zu entnehmen (oben rechts).

## Limitationen
Am problematischsten ist die Darstellung der Wahlbezirke und der Abgeordnetenwahlkreise innerhalb Pankows. Den frei verfügbaren Informationen im Netz ist die Änderung der Wahlkreise nicht exakt und maschinenlesbar zu entnehmen. Deswegen erfolgt hier nur die Darstellung der letzten zwei Wahlen.

<!--chapter:end:index.Rmd-->

# Wahlkarten

```{r wahlkarten setup, echo=FALSE, message=FALSE}

knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)

suppressPackageStartupMessages(library(tidyverse)) # Tidying data
suppressPackageStartupMessages(library(sf)) # Reading Shapefiles
suppressPackageStartupMessages(library(here)) # Find correct place to load 
suppressPackageStartupMessages(library(tmap)) # Find correct place to load 

df <- readRDS(file=here("data/df_grune_pankow.rds")) %>% rename("Stimmanteil in %" = stimmanteil)

tmap_mode("plot")

```

## EU-Wahl 2019
```{r}
df_grune_pankow <- df %>% filter(wahl == "EW_2019") 

tm_shape(df_grune_pankow) + 
  tm_fill("Stimmanteil in %", palette = "BuGn", alpha = .5) +
  tm_borders() +
  tm_scale_bar(breaks = c(0, 1, 2), text.size = .5) +
  tm_layout(frame = FALSE) 
```

## Bundestagswahl Erststimme 2017
```{r}
df_grune_pankow <- df %>% filter(wahl == "BU1_2017") 

tm_shape(df_grune_pankow) + 
  tm_fill("Stimmanteil in %", palette = "BuGn", alpha = .5) +
  tm_borders() +
  tm_scale_bar(breaks = c(0, 1, 2), text.size = .5) +
  tm_layout(frame = FALSE) 
```

## Bundestagswahl Zweitstimme 2017
```{r}
df_grune_pankow <- df %>% filter(wahl == "BU2_2017") 

tm_shape(df_grune_pankow) + 
  tm_fill("Stimmanteil in %", palette = "BuGn", alpha = .5) +
  tm_borders() +
  tm_scale_bar(breaks = c(0, 1, 2), text.size = .5) +
  tm_layout(frame = FALSE) 
```

## BVV-Wahl 2016
```{r}
df_grune_pankow <- df %>% filter(wahl == "AGHBVV_2016") 

tm_shape(df_grune_pankow) + 
  tm_fill("Stimmanteil in %", palette = "BuGn", alpha = .5) +
  tm_borders() +
  tm_scale_bar(breaks = c(0, 1, 2), text.size = .5) +
  tm_layout(frame = FALSE) 

```

## AGH Erststimme 2016
```{r}
df_grune_pankow <- df %>% filter(wahl == "AGHErststimme_2016") 

tm_shape(df_grune_pankow) + 
  tm_fill("Stimmanteil in %", palette = "BuGn", alpha = .5) +
  tm_borders() +
  tm_scale_bar(breaks = c(0, 1, 2), text.size = .5) +
  tm_layout(frame = FALSE) 
```

## AGH Zweitstimme 2016
```{r}
df_grune_pankow <- df %>% filter(wahl == "AGHZweitstimme_2016") 

tm_shape(df_grune_pankow) + 
  tm_fill("Stimmanteil in %", palette = "BuGn", alpha = .5) +
  tm_borders() +
  tm_scale_bar(breaks = c(0, 1, 2), text.size = .5) +
  tm_layout(frame = FALSE) 
```

## EU-Wahl 2014
```{r}
df_grune_pankow <- df %>% filter(wahl == "EU_2014") 

tm_shape(df_grune_pankow) + 
  tm_fill("Stimmanteil in %", palette = "BuGn", alpha = .5) +
  tm_borders() +
  tm_scale_bar(breaks = c(0, 1, 2), text.size = .5) +
  tm_layout(frame = FALSE) 
```

## Bundestagswahl Erststimme 2013
```{r}
df_grune_pankow <- df %>% filter(wahl == "BUErststimme_2013") 

tm_shape(df_grune_pankow) + 
  tm_fill("Stimmanteil in %", palette = "BuGn", alpha = .5) +
  tm_borders() +
  tm_scale_bar(breaks = c(0, 1, 2), text.size = .5) +
  tm_layout(frame = FALSE) 
```

## Bundestagswahl Zweitstimme 2013
```{r}
df_grune_pankow <- df %>% filter(wahl == "BUZweitstimme_2013") 

tm_shape(df_grune_pankow) + 
  tm_fill("Stimmanteil in %", palette = "BuGn", alpha = .5) +
  tm_borders() +
  tm_scale_bar(breaks = c(0, 1, 2), text.size = .5) +
  tm_layout(frame = FALSE) 
```

## BVV-Wahl 2011
```{r}
df_grune_pankow <- df %>% filter(wahl == "AGHBVV_2011") 

tm_shape(df_grune_pankow) + 
  tm_fill("Stimmanteil in %", palette = "BuGn", alpha = .5) +
  tm_borders() +
  tm_scale_bar(breaks = c(0, 1, 2), text.size = .5) +
  tm_layout(frame = FALSE) 

```

## AGH Erststimme 2011
```{r}
df_grune_pankow <- df %>% filter(wahl == "AGHErststimme_2011") 

tm_shape(df_grune_pankow) + 
  tm_fill("Stimmanteil in %", palette = "BuGn", alpha = .5) +
  tm_borders() +
  tm_scale_bar(breaks = c(0, 1, 2), text.size = .5) +
  tm_layout(frame = FALSE) 
```

## AGH Zweitstimme 2011
```{r}
df_grune_pankow <- df %>% filter(wahl == "AGHZweitstimme_2011") 

tm_shape(df_grune_pankow) + 
  tm_fill("Stimmanteil in %", palette = "BuGn", alpha = .5) +
  tm_borders() +
  tm_scale_bar(breaks = c(0, 1, 2), text.size = .5) +
  tm_layout(frame = FALSE) 
```

## EUwahl 2009
```{r}
df_grune_pankow <- df %>% filter(wahl == "EU_2009") 

tm_shape(df_grune_pankow) + 
  tm_fill("Stimmanteil in %", palette = "BuGn", alpha = .5) +
  tm_borders() +
  tm_scale_bar(breaks = c(0, 1, 2), text.size = .5) +
  tm_layout(frame = FALSE) 
```


## Bundestagswahl Erststimme 2009
```{r}
df_grune_pankow <- df %>% filter(wahl == "BUErststimme_2009") 

tm_shape(df_grune_pankow) + 
  tm_fill("Stimmanteil in %", palette = "BuGn", alpha = .5) +
  tm_borders() +
  tm_scale_bar(breaks = c(0, 1, 2), text.size = .5) +
  tm_layout(frame = FALSE) 
```

## Bundestagswahl Zweitstimme 2009
```{r}
df_grune_pankow <- df %>% filter(wahl == "BUZweitstimme_2009") 

tm_shape(df_grune_pankow) + 
  tm_fill("Stimmanteil in %", palette = "BuGn", alpha = .5) +
  tm_borders() +
  tm_scale_bar(breaks = c(0, 1, 2), text.size = .5) +
  tm_layout(frame = FALSE) 
```

<!--chapter:end:02-wahlkarten.Rmd-->

# Zeitverläufe


## Entwicklung der Wahlergebnisse der großen Parteien in Pankow 2009 bis 2019
```{r Zeitverläufe1, echo=FALSE, message=FALSE}
suppressPackageStartupMessages(library(tidyverse)) # Tidying data
suppressPackageStartupMessages(library(sf)) # Reading Shapefiles
suppressPackageStartupMessages(library(here)) # Find correct place to load 
suppressPackageStartupMessages(library(tmap)) # Find correct place to load 
suppressPackageStartupMessages(library(ggalt)) # For splinter

df_wahlen <- readRDS(file=here("data/df_wahlen.rds"))

df_temp <- df_wahlen %>% 
  filter(bezirksname == "Pankow") %>% 
  group_by(jahr, partei, wahl) %>% 
  summarise(mean = mean(stimmanteil)) %>% 
  ungroup() %>% 
  group_by(jahr, partei) %>% 
  summarise(mean = mean(mean)) %>% 
  mutate(partei = factor(partei, levels = c("af_d", "cdu", "die_linke", "fdp", "grune", "spd"), labels = c("AFD", "CDU", "Linkspartei", "FDP", "Grüne", "SPD")))


ggplot(df_temp) +
  geom_point(aes(x=jahr, y=mean, color = partei)) +
  geom_xspline(aes(x = jahr, y = mean, color = partei), size = 0.8, spline_shape = -.25) +
  theme_classic() +
   scale_color_manual(values = c("AFD" = "deepskyblue", "CDU" = "black", "Linkspartei" = "hotpink1", "FDP" = "gold", "Grüne" = "forestgreen", "SPD" = "red")) +
  theme(legend.position = "bottom") +
  labs(    color = "",
           x = "",
           y = "Stimmanteil in % *",
           subtitle = waiver(),
           caption = "* Stimmanteile von gleichzeitigen Wahlen wurden gemittelt",
           tag = waiver()
) +
  theme(text=element_text(size=20,  family="sans"))
  
```


<!--chapter:end:03-zeitverlaeufe.Rmd-->

# Zusammenhänge
```{r zusammenhaenge setup, echo=FALSE, message=FALSE}
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)

suppressPackageStartupMessages(library(tidyverse)) # Tidying data
suppressPackageStartupMessages(library(sf)) # Reading Shapefiles
suppressPackageStartupMessages(library(here)) # Find correct place to load 
suppressPackageStartupMessages(library(tmap)) # Find correct place to load 

df_bu <- readRDS(file=here("data/df_bu.rds")) %>% filter(partei == "grune")
df_alter <- readRDS(file=here("data/df_alter.rds")) 
df_wohnqualitaet <- readRDS(file=here("data/df_wohnqualitaet.rds")) 

tmap_mode("view")

```

## Wie hängt das Alter mit den Wahlergebnissen der Grünen zusammen?
```{r zusammenhaenge1}
korrelationskoeffizent = df_bu %>% st_drop_geometry() %>% summarize(correlation = cor(stimmanteil, altersmittelwert)) %>% pull() %>% round(.,3) 

ggplot(df_bu, aes(x = altersmittelwert, y = stimmanteil)) +
  geom_jitter(aes(color = stimmanteil)) +
  scale_color_continuous(low = "lightgreen",  high = "darkgreen") +
  labs(x = "Altersmittelwert der Wahlbezirke", y = "Wahlergebnis in %") +  
  geom_smooth(method = "lm", se = TRUE) +
  theme_classic() +
  theme(legend.position = "none") +
  annotate("text", x = 52, y = 30, label = paste("Korrelations-Koeff:", korrelationskoeffizent)) + 
  theme(text = element_text(size = 20)) 
```

## Altesmittelwert der Wahlbezirke
```{r zusammenhaenge2}
tm_shape(df_alter) +
  tm_borders() +
  tm_fill("altersmittelwert", alpha = .5) +
    tm_layout(frame = FALSE) 
```

## Wie hängt die Wohnlage mit den Wahlergebnissen der Grünen zusammen?
### Gute Wohnlage
```{r zusammenhaenge3}
korrelationskoeffizent = df_wohnqualitaet %>% st_drop_geometry() %>% summarize(correlation = cor(stimmanteil, gutewohnlage, use = "complete.obs")) %>% pull() %>% round(.,2)

ggplot(df_wohnqualitaet, aes(x = gutewohnlage, y = stimmanteil)) +
  geom_jitter(aes(color = stimmanteil)) +
  scale_color_continuous(low = "lightgreen",  high = "darkgreen") +
  labs(x = "Anteil gute Wohnlage pro Wahlbezirk", y = "Wahlergebnis der Grünen in %") +  
  geom_smooth(method = "lm", se = TRUE) +
  theme_classic() +
  theme(legend.position = "none") + 
  annotate("text", x = 70, y = 70, label = paste("Korrelations-Koeff:", korrelationskoeffizent)) +
  theme(text = element_text(size = 20)) 

```

### Einfache Wohnlage
```{r}
korrelationskoeffizent = df_wohnqualitaet %>% st_drop_geometry() %>% summarize(correlation = cor(stimmanteil, einfachewohnlage, use = "complete.obs")) %>% pull() %>% round(.,2) 

ggplot(df_wohnqualitaet, aes(x = einfachewohnlage, y = stimmanteil)) +
  geom_jitter(aes(color = stimmanteil)) +
  scale_color_continuous(low = "lightgreen",  high = "darkgreen") +
  labs(x = "Anteil einfache Wohnlage pro Wahlbezirk", y = "Wahlergebnis der Grünen in %") +  
  geom_smooth(method = "lm", se = TRUE) +
  theme_classic() +
  theme(legend.position = "none") + 
  annotate("text", x = 70, y = 70, label = paste("Korrelations-Koeff:", korrelationskoeffizent)) +
  theme(text = element_text(size = 20)) 

```

## Wie hängt Lärm und das Wahlergebnis der Grünen zusammen?
```{r zusammenhaenge6}
korrelationskoeffizent = df_wohnqualitaet %>% st_drop_geometry() %>% summarize(correlation = cor(stimmanteil, lärmanteil, use = "complete.obs")) %>% pull() %>% round(.,3) 

ggplot(df_wohnqualitaet, aes(x = lärmanteil, y = stimmanteil)) +
  geom_jitter(aes(color = stimmanteil)) +
  scale_color_continuous(low = "lightgreen",  high = "darkgreen") +
  labs(x = "Anteil der Wohnlagen mit Lärm pro Wahlbezirk", y = "Wahlergebnis der Grünen in %") +  
  geom_smooth(method = "lm", se = TRUE) +
  annotate("text", x = 70, y = 70, label = paste("Korrelations-Koeff:", korrelationskoeffizent)) +
  theme_classic() +
  theme(legend.position = "none") 
```

## Anteil der Wohnlagen mit Lärm pro Wahlbezirk als Karte
```{r zusammenhaenge7}
tm_shape(df_wohnqualitaet) +
  tm_borders() +
  tm_fill("lärmanteil", alpha = .5) +
    tm_layout(frame = FALSE) 
```

<!--chapter:end:04-zusammenhaenge.Rmd-->

# Potentialanalyse

```{r potentialanalyse setup,  echo=FALSE, message=FALSE}
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)

suppressPackageStartupMessages(library(tidyverse)) # Tidying data
suppressPackageStartupMessages(library(sf)) # Reading Shapefiles
suppressPackageStartupMessages(library(here)) # Find correct place to load 
suppressPackageStartupMessages(library(tmap)) # Find correct place to load 

df <- readRDS(here("data/df_grune_pankow.rds"))

tmap_mode("view")

```


## "Wobble"-Bezirke
```{r potentialanalyse1}
df_temp <- df %>% 
  select(wahlbezirk, stimmanteil, wahl) %>% 
  group_by(wahlbezirk) %>% 
  summarise(Standardabweichung = round(sd(stimmanteil),2))

tm_shape(df_temp) +
  tm_fill("Standardabweichung") +
  tm_layout(frame = FALSE) +
  tm_borders()

```

## Differenez der Erst- und Zweitstimmen bei der Bundestagswahl 2009
```{r potentialanalyse2}
wahlen_zu_vergleichen = c("BUErststimme_2009", "BUZweitstimme_2009")

df %>% 
  filter(wahl %in% wahlen_zu_vergleichen) %>% 
  st_drop_geometry() %>% 
  select(wahlbezirk, stimmanteil, wahl) %>% 
  pivot_wider(names_from = wahl, values_from = stimmanteil) %>% 
  mutate("Differenz 1. - 2.Stimme" = get(wahlen_zu_vergleichen[1]) - get(wahlen_zu_vergleichen[2])) %>% 
  select(wahlbezirk, "Differenz 1. - 2.Stimme") %>% 
  left_join(df %>% filter(wahl == wahlen_zu_vergleichen[1]) %>% select(wahlbezirk)) %>% 
  st_as_sf() %>% 
  tm_shape() +
  tm_fill("Differenz 1. - 2.Stimme") +
  tm_borders() +
    tm_layout(frame = FALSE) 
```


## Differenez der Erst- und Zweitstimmen bei den Wahlen zum Abgeordnetenhaus 2011
```{r potentialanalyse3}
wahlen_zu_vergleichen = c("AGHErststimme_2011", "AGHZweitstimme_2011")

df %>% 
  filter(wahl %in% wahlen_zu_vergleichen) %>% 
  st_drop_geometry() %>% 
  select(wahlbezirk, stimmanteil, wahl) %>% 
  pivot_wider(names_from = wahl, values_from = stimmanteil) %>% 
  mutate("Differenz 1. - 2.Stimme" = get(wahlen_zu_vergleichen[1]) - get(wahlen_zu_vergleichen[2])) %>% 
  select(wahlbezirk, "Differenz 1. - 2.Stimme") %>% 
  left_join(df %>% filter(wahl == wahlen_zu_vergleichen[1]) %>% select(wahlbezirk)) %>% 
  st_as_sf() %>% 
  tm_shape() +
  tm_fill("Differenz 1. - 2.Stimme") +
  tm_borders() +
    tm_layout(frame = FALSE) 
```


## Differenez der Erst- und Zweitstimmen bei der Bundestagswahl 2013
```{r potentialanalyse4}
wahlen_zu_vergleichen = c("BUErststimme_2013", "BUZweitstimme_2013")

df %>% 
  filter(wahl %in% wahlen_zu_vergleichen) %>% 
  st_drop_geometry() %>% 
  select(wahlbezirk, stimmanteil, wahl) %>% 
  pivot_wider(names_from = wahl, values_from = stimmanteil) %>% 
  mutate("Differenz 1. - 2.Stimme" = get(wahlen_zu_vergleichen[1]) - get(wahlen_zu_vergleichen[2])) %>% 
  select(wahlbezirk, "Differenz 1. - 2.Stimme") %>% 
  left_join(df %>% filter(wahl == wahlen_zu_vergleichen[1]) %>% select(wahlbezirk)) %>% 
  st_as_sf() %>% 
  tm_shape() +
  tm_fill("Differenz 1. - 2.Stimme") +
  tm_borders() +
    tm_layout(frame = FALSE) 
```

## Differenez der Erst- und Zweitstimmen bei den Wahlen zum Abgeordnetenhaus 2016
```{r potentialanalyse5}
wahlen_zu_vergleichen = c("AGHErststimme_2016", "AGHZweitstimme_2016")

df %>% 
  filter(wahl %in% wahlen_zu_vergleichen) %>% 
  st_drop_geometry() %>% 
  select(wahlbezirk, stimmanteil, wahl) %>% 
  pivot_wider(names_from = wahl, values_from = stimmanteil) %>% 
  mutate("Differenz 1. - 2.Stimme" = get(wahlen_zu_vergleichen[1]) - get(wahlen_zu_vergleichen[2])) %>% 
  select(wahlbezirk, "Differenz 1. - 2.Stimme") %>% 
  left_join(df %>% filter(wahl == wahlen_zu_vergleichen[1]) %>% select(wahlbezirk)) %>% 
  st_as_sf() %>% 
  tm_shape() +
  tm_fill("Differenz 1. - 2.Stimme") +
  tm_borders() +
  tm_layout(frame = FALSE) +
  tm_layout(legend.title.size = 4,
          legend.text.size = 2,
          legend.position = c("left","bottom"),
          legend.bg.color = "white",
          legend.bg.alpha = 1,
          legend.outside = TRUE)
```



## Differenez der Erst- und Zweitstimmen bei der Bundestagswahl 2017
```{r potentialanalyse6}
wahlen_zu_vergleichen = c("BU1_2017", "BU2_2017")

df %>% 
  filter(wahl %in% wahlen_zu_vergleichen) %>% 
  st_drop_geometry() %>% 
  select(wahlbezirk, stimmanteil, wahl) %>% 
  pivot_wider(names_from = wahl, values_from = stimmanteil) %>% 
  mutate("Differenz" = get(wahlen_zu_vergleichen[1]) - get(wahlen_zu_vergleichen[2])) %>% 
  select(wahlbezirk, "Differenz") %>% 
  left_join(df %>% filter(wahl == wahlen_zu_vergleichen[1]) %>% select(wahlbezirk)) %>% 
  st_as_sf() %>% 
  tm_shape() +
  tm_fill("Differenz") +
  tm_borders() +
    tm_layout(frame = FALSE) +
    tm_layout(legend.title.size = 2,
          legend.text.size = 1,
          legend.position = c("left","bottom"),
          legend.bg.color = "white",
          legend.bg.alpha = 1,
          legend.outside = TRUE)
```

<!--chapter:end:05-potentialanalyse.Rmd-->

